{
  "name": "api",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "pnpm run db:dev:generate && pnpm run db:dev:migrate && nest build",
    "build:render": "export NODE_ENV=render && npx prisma generate && npx prisma migrate deploy && nest build",
    "db:dev:debug": "npx prisma studio --browser none",
    "db:dev:generate": "npx prisma generate",
    "db:dev:deploy": "prisma migrate deploy",
    "db:dev:migrate": "npx prisma migrate dev",
    "db:dev:reset": "npx prisma migrate reset --force && pnpm run seed",
    "db:dev:kill": "docker compose rm dev-db -s -f -v",
    "db:dev:restart": "yarn db:dev:kill && yarn db:dev:start && sleep 1 && yarn db:dev:deploy",
    "db:dev:start": "docker compose up dev-db -d",
    "db:test:debug": "dotenv -e .env.test -- npx prisma studio --browser none",
    "db:test:deploy": "dotenv -e .env.test -- prisma migrate deploy",
    "db:test:kill": "docker compose rm test-db -s -f -v",
    "db:test:restart": "yarn db:test:kill && yarn db:test:start && sleep 1 && yarn db:test:deploy",
    "db:test:start": "docker compose up test-db -d",
    "db:test:reset": "docker compose rm test-db -s -f -v && docker compose up -d test-db && sleep 1 && dotenv -e .env.test -- prisma migrate reset --force",
    "docker:db:up": "docker-compose up -d dev-db",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "start:debug": "export NODE_ENV=dev && nest start --debug --watch",
    "start:dev": "export NODE_ENV=dev && nest start --watch",
    "start:prod": "export NODE_ENV=production && nest start",
    "start:render": "export NODE_ENV=render && nest start",
    "start": "nest start",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "pnpm run db:test:reset && jest --config ./test/jest-e2e.config.ts",
    "test:watch": "jest --watch",
    "test": "jest",
    "typescript": "tsc --noEmit",
    "seed": "ts-node -r tsconfig-paths/register prisma/seed.ts"
  },
  "dependencies": {
    "@nestjs-modules/mailer": "^2.0.2",
    "@nestjs/common": "^11.1.0",
    "@nestjs/config": "^3.2.1",
    "@nestjs/core": "^11.1.0",
    "@nestjs/event-emitter": "^3.0.1",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/passport": "^10.0.3",
    "@nestjs/platform-express": "^11.1.0",
    "@nestjs/swagger": "^11.1.6",
    "@prisma/client": "^6.8.0",
    "argon2": "^0.43.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "dotenv": "^16.5.0",
    "lodash": "^4.17.21",
    "nodemailer": "^7.0.3",
    "passport-jwt": "^4.0.1",
    "prisma": "^6.8.0",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.8.1",
    "uuid": "^11.1.0"
  },
  "devDependencies": {
    "@faker-js/faker": "^9.7.0",
    "@jest/types": "^29.6.3",
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/lodash": "^4.17.4",
    "@types/node": "^20.3.1",
    "@types/nodemailer": "^6.4.17",
    "@types/supertest": "^6.0.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "dotenv-cli": "^8.0.0",
    "eslint": "^8.57.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-prettier": "^5.1.3",
    "jest": "^29.5.0",
    "prettier": "^3.2.5",
    "prisma-dbml-generator": "^0.12.0",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.2",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.4.3"
  },
  "resolutions": {
    "@typescript-eslint/typescript-estree": "^7.4.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": ".",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "moduleNameMapper": {
      "^@/lib/(.*)$": "<rootDir>/lib/$1",
      "^@/test/(.*)$": "<rootDir>/test/$1",
      "^@/(.*)$": "<rootDir>/src/$1"
    }
  },
  "engine": {
    "node": "18.19.0"
  }
}
